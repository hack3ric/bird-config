define COMM_FULL = (OWNAS42, 4, 10);
define COMM_TRANSIT = (OWNAS42, 4, 20);
define COMM_PRIV_TRANSIT = (OWNAS42, 4, 21);
define COMM_DOWNSTREAM = (OWNAS42, 4, 30);
define COMM_PEER = (OWNAS42, 4, 40);
define COMM_PRIV_PEER = (OWNAS42, 4, 41);

define COMM_NEIGHBOR_TYPES = [
  COMM_FULL, COMM_TRANSIT, COMM_PRIV_TRANSIT,
  COMM_DOWNSTREAM, COMM_PEER, COMM_PRIV_PEER
];

function dn42_neighbor_community_import(string ntype) {
  if ntype = "full" then bgp_large_community.add(COMM_FULL);
  else if ntype = "transit" then bgp_large_community.add(COMM_TRANSIT);
  else if ntype = "priv_transit" then bgp_large_community.add(COMM_PRIV_TRANSIT);
  else if ntype = "downstream" then bgp_large_community.add(COMM_DOWNSTREAM);
  else if ntype = "peer" then bgp_large_community.add(COMM_PEER);
  else if ntype = "priv_peer" then bgp_large_community.add(COMM_PEER);
}

function dn42_neighbor_allow_import(string ntype) {
  if ntype = "downstream" || ntype = "peer" || ntype = "priv_peer" then {
    if bgp_path.last != bgp_path.first then reject;
  }
}

function dn42_neighbor_allow_export(string ntype) {
  if !is_self_net() then {
    if ntype = "transit" then {
      if COMM_DOWNSTREAM !~ bgp_large_community then reject;
    } else if ntype = "downstream" then {
      if COMM_PRIV_TRANSIT ~ bgp_large_community || COMM_PRIV_PEER ~ bgp_large_community then reject;
    } else if ntype = "priv_transit" || ntype = "peer" || ntype = "priv_peer" then reject;
  }
}
