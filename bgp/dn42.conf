roa4 table dn42_roa_v4;
roa6 table dn42_roa_v6;

protocol static {
  roa4 { table dn42_roa_v4; };
  include "../dn42_roa_v4.conf";
};

protocol static {
  roa6 { table dn42_roa_v6; };
  include "../dn42_roa_v6.conf";
};

function dn42_bgp_import_check() {
  if is_valid_network_42() && !is_self_net() then {
    if (net.type = NET_IP4 && roa_check(dn42_roa_v4, net, bgp_path.last) != ROA_VALID)
      || (net.type = NET_IP6 && roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) then
    {
      print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
      reject;
    }
  } else reject;
}

function dn42_bgp_import_check_v4() {
  dn42_bgp_import_check();
}

function dn42_bgp_import_check_v6() {
  dn42_bgp_import_check();
}

function dn42_bgp_export_check() {
  if !is_valid_network_42() || source !~ [RTS_STATIC, RTS_BGP] then reject;
}

function dn42_bgp_export_check_v4() {
  dn42_bgp_export_check();
}

function dn42_bgp_export_check_v6() {
  dn42_bgp_export_check();
}

template bgp dn42_peer from bgp_rate_limited {
  local as OWNAS42;
  path metric 1;

  ipv4 {
    import filter {
      dn42_bgp_import_check();
      accept;
    };
    export filter {
      dn42_bgp_export_check();
      accept;
    };
  };

  ipv6 {
    import filter {
      dn42_bgp_import_check();
      accept;
    };
    export filter {
      dn42_bgp_export_check();
      accept;
    };
  };
}

template bgp dn42_peer_extended from dn42_peer {
  ipv4 {
    extended next hop;
  };
}
