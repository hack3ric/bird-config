roa4 table dn42_roa;
roa6 table dn42_roa_v6;

protocol static {
  roa4 { table dn42_roa; };
  include "../roa_dn42_v4.conf";
};

protocol static {
  roa6 { table dn42_roa_v6; };
  include "../roa_dn42_v6.conf";
};

template bgp dn42_peer from bgp_general {
  local as OWNAS42;
  path metric 1;

  ipv4 {
    import filter {
      if is_valid_network_42_v4() && !is_self_net_v4() then {
        if (roa_check(dn42_roa, net, bgp_path.last) != ROA_VALID) then {
          print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
          reject;
        } else accept;
      } else reject;
    };
    export where is_valid_network_42() && source ~ [RTS_STATIC, RTS_BGP];
  };

  ipv6 {
    import filter {
      if is_valid_network_42_v6() && !is_self_net_v6() then {
        if (roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) then {
          print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
          reject;
        } else accept;
      } else reject;
    };
    export where is_valid_network_42_v6() && source ~ [RTS_STATIC, RTS_BGP];
  };
}

template bgp dn42_peer_extended from dn42_peer {
  ipv4 {
    extended next hop;
  };
}
