include "local.conf";
include "preload/*.conf";

router id OWNIP42v4;
ipv4 table igp4;
ipv6 table igp6;

# TODO: Add IANA
function is_self_net_v4() {
  return net ~ OWNNETSET42v4 || net ~ OWNNETSETLOCALv4;
}

# TODO: Add IANA
function is_self_net_v6() {
  return net ~ OWNNETSET42v6 || net ~ OWNNETSETLOCALv6;
}

function is_valid_network_42_v4() {
  return net ~ [
    172.20.0.0/14{21,29},  # dn42
    172.20.0.0/24{28,32},  # dn42 Anycast
    172.21.0.0/24{28,32},  # dn42 Anycast
    172.22.0.0/24{28,32},  # dn42 Anycast
    172.23.0.0/24{28,32},  # dn42 Anycast
    172.31.0.0/16+,        # ChaosVPN
    10.100.0.0/14+,        # ChaosVPN
    10.127.0.0/16{16,32},  # neonetwork
    10.0.0.0/8{15,24}      # Freifunk.net
  ];
}

function is_valid_network_42_v6() {
  return net ~ [
    fd00::/8{44,64}  # ULA address space as per RFC 4193
  ];
}

protocol device {
  scan time 10;
}

protocol kernel kernel_master4 {
  scan time 20;
  kernel table 1;

  ipv4 {
    import none;
    export filter {
      if source = RTS_STATIC then reject;
      krt_prefsrc = OWNIP42v4;
      accept;
    };
  };
}

protocol kernel kernel_master6 {
  scan time 20;
  kernel table 1;

  ipv6 {
    import none;
    export filter {
      if source = RTS_STATIC then reject;
      krt_prefsrc = OWNIP42v6;
      accept;
    };
  };
};

protocol kernel kernel_igp4 {
  scan time 20;
  kernel table 2;

  ipv4 {
    table igp4;
    import none;
    export filter {
      if source = RTS_STATIC then reject;
      krt_prefsrc = OWNIP42v4;
      accept;
    };
  };
}

protocol kernel kernel_igp6 {
  scan time 20;
  kernel table 2;

  ipv6 {
    table igp6;
    import none;
    export filter {
      if source = RTS_STATIC then reject;
      krt_prefsrc = OWNIP42v6;
      accept;
    };
  };
}

protocol static {
  route OWNNET42v4 reject;

  ipv4 {
    import all;
    export none;
  };
}

protocol static {
  route OWNNET42v6 reject;

  ipv6 {
    import all;
    export none;
  };
}

protocol direct {
  interface "st";
  ipv4 { table igp4; };
  ipv6 { table igp6; };
}

include "bgp/*.conf";
include "peers/*.conf";
